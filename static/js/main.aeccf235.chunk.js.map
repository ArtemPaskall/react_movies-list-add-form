{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasTitleError","setTitleError","hasDescriptionError","setDescriptionError","hasImagePathError","setImagePathError","hasMoviePathError","setMoviePathError","hasMovieIdError","setMovieIdError","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","App","moviesFromServer","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"mwEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,cCLfC,G,MAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,EAA0BC,mBAAS,IAAnC,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAAsCD,mBAAS,IAA/C,mBAAOd,EAAP,KAAoBgB,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAOb,EAAP,KAAegB,EAAf,KACA,EAA8BH,mBAAS,IAAvC,mBAAOZ,EAAP,KAAgBgB,EAAhB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOH,EAAP,KAAeQ,EAAf,KAEA,EAAuCL,oBAAS,GAAhD,mBAAOM,EAAP,KAAsBC,EAAtB,KACA,EAAmDP,oBAAS,GAA5D,mBAAOQ,EAAP,KAA4BC,EAA5B,KACA,EAA+CT,oBAAS,GAAxD,mBAAOU,EAAP,KAA0BC,EAA1B,KACA,EAA+CX,oBAAS,GAAxD,mBAAOY,EAAP,KAA0BC,EAA1B,KACA,EAA2Cb,oBAAS,GAApD,mBAAOc,EAAP,KAAwBC,EAAxB,KAEA,OACE,uBACEC,SAAU,SAACC,GACTA,EAAMC,iBAENX,GAAetB,GACfwB,GAAqBvB,GACrByB,GAAmBxB,GACnB0B,GAAmBzB,GACnB2B,GAAiBlB,GAEbZ,GAASC,GAAeC,GAAUC,GAAWS,IAC/CE,EAAM,CACJd,QACAC,cACAC,SACAC,UACAS,WAEFI,EAAS,IACTC,EAAe,IACfC,EAAU,IACVC,EAAW,IACXC,EAAU,MAtBhB,UA0BE,wBACEc,QAAQ,QADV,kBAIE,uBACA,uBACEC,KAAK,OACLC,GAAG,QACHhC,UAAWiB,EAAgB,QAAU,GACrCgB,YAAY,cACZC,MAAOtC,EACPuC,SAAU,SAACP,GACThB,EAASgB,EAAMQ,OAAOF,aAI5B,uBACA,uBACA,wBAAOJ,QAAQ,cAAf,wBAEE,uBACA,uBACEC,KAAK,OACLC,GAAG,cACHhC,UAAWmB,EAAsB,QAAU,GAC3Cc,YAAY,oBACZC,MAAOrC,EACPsC,SAAU,SAACP,GACTf,EAAee,EAAMQ,OAAOF,aAIlC,uBACA,uBACA,wBAAOJ,QAAQ,SAAf,sBAEE,uBACA,uBACEC,KAAK,OACLC,GAAG,SACHhC,UAAWqB,EAAoB,QAAU,GACzCY,YAAY,mBACZC,MAAOpC,EACPqC,SAAU,SAACP,GACTd,EAAUc,EAAMQ,OAAOF,aAI7B,uBACA,uBACA,wBAAOJ,QAAQ,UAAf,qBAEE,uBACA,uBACEC,KAAK,OACLC,GAAG,UACHhC,UAAWuB,EAAoB,QAAU,GACzCU,YAAY,kBACZC,MAAOnC,EACPoC,SAAU,SAACP,GACTb,EAAWa,EAAMQ,OAAOF,aAI9B,uBACA,uBACA,wBAAOJ,QAAQ,SAAf,oBAEE,uBACA,uBACEC,KAAK,OACLC,GAAG,SACHhC,UAAWyB,EAAkB,QAAU,GACvCQ,YAAY,WACZC,MAAO1B,EACP2B,SAAU,SAACP,GACTZ,EAAUY,EAAMQ,OAAOF,aAI7B,uBACA,uBACA,wBACEH,KAAK,SADP,sB,OC3HOM,EAAgB,WAC3B,MAA4B1B,mBAAS2B,GAArC,mBAAOjC,EAAP,KAAekC,EAAf,KAMA,OACE,sBAAKvC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUU,MAVC,SAAC8B,GAChBD,EAAU,GAAD,mBAAKlC,GAAL,CAAamC,cCN1BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.aeccf235.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasDescriptionError, setDescriptionError] = useState(false);\n  const [hasImagePathError, setImagePathError] = useState(false);\n  const [hasMoviePathError, setMoviePathError] = useState(false);\n  const [hasMovieIdError, setMovieIdError] = useState(false);\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        setTitleError(!title);\n        setDescriptionError(!description);\n        setImagePathError(!imgUrl);\n        setMoviePathError(!imdbUrl);\n        setMovieIdError(!imdbId);\n\n        if (title && description && imgUrl && imdbUrl && imdbId) {\n          onAdd({\n            title,\n            description,\n            imgUrl,\n            imdbUrl,\n            imdbId,\n          });\n          setTitle('');\n          setDescription('');\n          setImgUrl('');\n          setImdbUrl('');\n          setImdbId('');\n        }\n      }}\n    >\n      <label\n        htmlFor=\"title\"\n      >\n        Title\n        <br />\n        <input\n          type=\"text\"\n          id=\"title\"\n          className={hasTitleError ? 'error' : ''}\n          placeholder=\"Enter title\"\n          value={title}\n          onChange={(event) => {\n            setTitle(event.target.value);\n          }}\n        />\n      </label>\n      <br />\n      <br />\n      <label htmlFor=\"description\">\n        Description\n        <br />\n        <input\n          type=\"text\"\n          id=\"description\"\n          className={hasDescriptionError ? 'error' : ''}\n          placeholder=\"Enter description\"\n          value={description}\n          onChange={(event) => {\n            setDescription(event.target.value);\n          }}\n        />\n      </label>\n      <br />\n      <br />\n      <label htmlFor=\"imgUrl\">\n        Image Url\n        <br />\n        <input\n          type=\"text\"\n          id=\"imgUrl\"\n          className={hasImagePathError ? 'error' : ''}\n          placeholder=\"Enter image path\"\n          value={imgUrl}\n          onChange={(event) => {\n            setImgUrl(event.target.value);\n          }}\n        />\n      </label>\n      <br />\n      <br />\n      <label htmlFor=\"imdbUrl\">\n        Imdb Url\n        <br />\n        <input\n          type=\"text\"\n          id=\"imdbUrl\"\n          className={hasMoviePathError ? 'error' : ''}\n          placeholder=\"Enter file path\"\n          value={imdbUrl}\n          onChange={(event) => {\n            setImdbUrl(event.target.value);\n          }}\n        />\n      </label>\n      <br />\n      <br />\n      <label htmlFor=\"imdbId\">\n        Imdb Id\n        <br />\n        <input\n          type=\"text\"\n          id=\"imdbId\"\n          className={hasMovieIdError ? 'error' : ''}\n          placeholder=\"Enter id\"\n          value={imdbId}\n          onChange={(event) => {\n            setImdbId(event.target.value);\n          }}\n        />\n      </label>\n      <br />\n      <br />\n      <button\n        type=\"submit\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}