{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasTitleError","setTitleError","hasImagePathError","setImagePathError","hasMoviePathError","setMoviePathError","hasMovieIdError","setMovieIdError","onSubmit","event","preventDefault","htmlFor","type","id","classNames","errorInput","placeholder","value","onChange","target","App","moviesFromServer","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdd597f6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasImagePathError, setImagePathError] = useState(false);\n  const [hasMoviePathError, setMoviePathError] = useState(false);\n  const [hasMovieIdError, setMovieIdError] = useState(false);\n\n  const validateInput = () => {\n    setTitleError(!title);\n    setImagePathError(!imgUrl);\n    setMoviePathError(!imdbUrl);\n    setMovieIdError(!imdbId);\n  };\n\n  const resetInput = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const onSubmitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    validateInput();\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      onAdd({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n      resetInput();\n    }\n  };\n\n  return (\n    <form\n      onSubmit={onSubmitHandler}\n    >\n      <div className=\"input-style\">\n        <label\n          htmlFor=\"title\"\n        >\n          Title\n          <br />\n          <input\n            type=\"text\"\n            id=\"title\"\n            className={\n              classNames({ errorInput: hasTitleError })\n            }\n            placeholder=\"Enter title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n          />\n        </label>\n      </div>\n\n      <div className=\"input-style\">\n        <label htmlFor=\"description\">\n          Description\n          <br />\n          <input\n            type=\"text\"\n            id=\"description\"\n            placeholder=\"Enter description\"\n            value={description}\n            onChange={(event) => {\n              setDescription(event.target.value);\n            }}\n          />\n        </label>\n      </div>\n\n      <div className=\"input-style\">\n        <label htmlFor=\"imgUrl\">\n          Image Url\n          <br />\n          <input\n            type=\"text\"\n            id=\"imgUrl\"\n            className={\n              classNames({ errorInput: hasImagePathError })\n            }\n            placeholder=\"Enter image path\"\n            value={imgUrl}\n            onChange={(event) => {\n              setImgUrl(event.target.value);\n              setImagePathError(false);\n            }}\n          />\n        </label>\n      </div>\n\n      <div className=\"input-style\">\n        <label htmlFor=\"imdbUrl\">\n          Imdb Url\n          <br />\n          <input\n            type=\"text\"\n            id=\"imdbUrl\"\n            className={\n              classNames({ errorInput: hasMoviePathError })\n            }\n            placeholder=\"Enter file path\"\n            value={imdbUrl}\n            onChange={(event) => {\n              setImdbUrl(event.target.value);\n              setMoviePathError(false);\n            }}\n          />\n        </label>\n      </div>\n\n      <div className=\"input-style\">\n        <label htmlFor=\"imdbId\">\n          Imdb Id\n          <br />\n          <input\n            type=\"text\"\n            id=\"imdbId\"\n            className={\n              classNames({ errorInput: hasMovieIdError })\n            }\n            placeholder=\"Enter id\"\n            value={imdbId}\n            onChange={(event) => {\n              setImdbId(event.target.value);\n              setMovieIdError(false);\n            }}\n          />\n        </label>\n      </div>\n\n      <button\n        type=\"submit\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}